{
  "openapi": "3.0.1",
  "info": {
    "title": "Accessibility Panel",
    "version": "1.0"
  },
  "paths": {
    "/account/changepassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change password.",
        "description": "Changes the password of the currently logged in user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/changeemail": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change email address.",
        "description": "Changes the email address of the currently logged in user.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserCredentialsDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/account": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete account.",
        "description": "Deletes the account of the currently logged in user.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/token/basic": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates a user and returns a JWT-Token.",
        "description": "This endpoint authenticates a user and returns a JWT-Token if the credentials are valid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success! Returns a JWT-Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LoginResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials."
          }
        }
      }
    },
    "/auth/register/basic": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a new user.",
        "description": "This endpoint registers a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LoginResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid."
          },
          "409": {
            "description": "A user with this email or username already exists."
          }
        }
      }
    },
    "/auth/token/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refreshes a JWT-Token.",
        "description": "This endpoint refreshes a JWT-Token if the refresh token is valid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success! Returns a refreshed JWT-Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TokenDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token."
          }
        }
      }
    },
    "/company/profile": {
      "get": {
        "tags": [
          "Company - Profile"
        ],
        "summary": "Returns the company profile.",
        "description": "This endpoint returns the company profile of the currently logged in user.\r\n\r\n\r\nIf no profile is found, a 404 error is returned.\r\n\r\nIf the user is not a company user, a 400 error is returned.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileDtoApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Company - Profile"
        ],
        "summary": "Creates a new company profile.",
        "description": "Creates a new company profile for the currently logged in user.\r\n\r\nIf a profile already exists, a 400 error is returned.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBasicProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileDtoApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "Company - Profile"
        ],
        "summary": "Partially update company profile.",
        "description": "Partially updates the company profile of the currently logged in user.\r\n\r\nEmail address has to be updated using the /profile/email endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBasicProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileDtoApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/panel/profile": {
      "get": {
        "tags": [
          "Panel - Profile"
        ],
        "summary": "Returns the panelmember profile.",
        "description": "This endpoint returns the panelmember profile of the currently logged in user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanelMemberProfileDtoApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Panel - Profile"
        ],
        "summary": "Creates a new panelmember profile.",
        "description": "Creates a new panelmember profile for the currently logged in user.\r\n\r\nIf a profile already exists, a 400 error is returned.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePanelMemberProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanelMemberProfileDtoApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "Panel - Profile"
        ],
        "summary": "Partially update panelmember profile.",
        "description": "Partially updates the panelmember profile of the currently logged in user.\r\n\r\nEmail address has to be updated using the /profile/email endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchPanelMemberProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PanelMemberProfileDtoApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "xAdmin - Users"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCredentialsDtoListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "tags": [
          "xAdmin - Users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCredentialsDtoApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "xAdmin - Users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCredentialsDtoApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChangePasswordRequestDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyProfileDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyProfileDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/CompanyProfileDto"
          }
        },
        "additionalProperties": false
      },
      "CreateBasicProfileDto": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePanelMemberProfileDto": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/TokenResponseDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserCredentialsDto"
          }
        },
        "additionalProperties": false
      },
      "PanelMemberProfileDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "specialDataId": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PanelMemberProfileDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/PanelMemberProfileDto"
          }
        },
        "additionalProperties": false
      },
      "PatchBasicProfileDto": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatchPanelMemberProfileDto": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "TokenDto": {
        "required": [
          "expiresAt",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string",
            "description": "The JWT token.",
            "format": "string"
          },
          "expiresAt": {
            "type": "string",
            "description": "The expiration date of the JWT token.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Represents a token."
      },
      "TokenRefreshRequestDto": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string",
            "format": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenRequestDto": {
        "required": [
          "email",
          "password",
          "portal"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "portal": {
            "minLength": 1,
            "type": "string",
            "format": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserCreateRequestDto": {
        "required": [
          "emailAddress",
          "password",
          "portal"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "minLength": 8,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 8,
            "type": "string",
            "format": "password"
          },
          "portal": {
            "minLength": 1,
            "type": "string",
            "format": "string"
          }
        },
        "additionalProperties": false
      },
      "UserCredentialsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "profileType": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserCredentialsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/UserCredentialsDto"
          }
        },
        "additionalProperties": false
      },
      "UserCredentialsDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCredentialsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}